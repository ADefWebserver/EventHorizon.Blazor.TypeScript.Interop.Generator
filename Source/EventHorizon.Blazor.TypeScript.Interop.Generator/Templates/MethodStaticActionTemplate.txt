        #region [[NAME]] TODO: Get Comments as metadata identification
        private static bool Is[[NAME_CAPTIALIZED]]Enabled = false;
        private static readonly IDictionary<string, Func<Task>> [[NAME]]ActionMap = new Dictionary<string, Func<Task>>();

        public static string [[NAME]](
            Func<Task> callback
        )
        {
            Setup[[NAME_CAPTIALIZED]]StaticLoop();

            var handle = Guid.NewGuid().ToString();
            [[NAME]]ActionMap.Add(
                handle,
                callback
            );

            return handle;
        }

        private static void Setup[[NAME_CAPTIALIZED]]StaticLoop()
        {
            if (Is[[NAME_CAPTIALIZED]]Enabled)
            {
                return;
            }
            EventHorizonBlazorInteropt.AssemblyFuncCallback(
                "[[ASSEMBLY]]",
                "[[NAMESPACED_METHOD]]",
                "Call[[NAME_CAPTIALIZED]]StaticActions"
            );
            Is[[NAME_CAPTIALIZED]]Enabled = true;
        }

        [JSInvokable]
        public static async Task Call[[NAME_CAPTIALIZED]]StaticActions()
        {
            foreach (var action in [[NAME]]ActionMap.Values)
            {
                await action();
            }
        }
        #endregion